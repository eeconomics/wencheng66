# Read the Docs 配置文件版本（必填，当前固定为 2）
version: 2

# ------------------------------
# 1. 构建环境配置（核心：指定 macOS 系统）
# ------------------------------
build:
  # 操作系统：明确指定为 macOS（可选值：ubuntu-22.04, macos-12, windows-2022）
  os: macos-12
  # 构建工具：默认使用 "sphinx"（文档生成工具，若用 MkDocs 需改为 "mkdocs"）
  tools:
    # Python 版本：指定项目使用的 Python 版本（macOS 预装 Python，但建议显式指定避免兼容问题）
    python: "3.11"

# ------------------------------
# 2. Python 依赖管理（若文档依赖第三方库）
# ------------------------------
python:
  # 依赖安装方式：通过 requirements.txt 文件安装（推荐，便于版本控制）
  install:
    # 1. 安装文档构建依赖（如 sphinx、sphinx-rtd-theme 等）
    - requirements: docs/requirements.txt
    # 2. （可选）若文档需要导入项目代码，需安装项目本身（以可编辑模式安装）
    - method: pip
      path: .  # 项目根目录（即 setup.py 或 pyproject.toml 所在路径）
  # （可选）虚拟环境缓存：加速后续构建（macOS 下缓存逻辑与 Linux 一致）
  cache:
    - pip: true  # 缓存 pip 安装的依赖包

# ------------------------------
# 3. 文档构建配置（Sphinx 为例，MkDocs 见下方补充）
# ------------------------------
sphinx:
  # 文档源文件目录（Sphinx 的 conf.py 所在路径，默认 "docs/"，可根据项目调整）
  configuration: docs/conf.py
  # （可选）构建参数：传递给 `sphinx-build` 的额外参数（如开启警告视为错误）
  builder: html  # 构建 HTML 格式文档（默认值，可选：pdf, epub 等）
  fail_on_warning: false  # 警告是否中断构建（建议开发阶段设为 true，减少隐患）

# ------------------------------
# 4. （可选）macOS 特定依赖安装（如系统级工具）
# ------------------------------
# 若文档构建需要 macOS 系统工具（如 brew 安装的软件），通过 `commands` 配置
commands:
  # 示例 1：安装 brew 包（如需要 graphviz 生成流程图，或 pandoc 转换文档）
  - if ! command -v graphviz &> /dev/null; then brew install graphviz; fi
  # 示例 2：安装 macOS 系统框架依赖（若文档涉及本地应用集成）
  - xcode-select --install || true  # 确保 Xcode 命令行工具已安装（避免编译依赖报错）

# ------------------------------
# 5. （可选）文档输出与部署配置
# ------------------------------
# 仅当需要自定义文档输出路径或部署到额外平台时配置
output:
  html:
    # 自定义 HTML 文档输出目录（默认是 Read the Docs 自动管理，无需修改）
    dir: docs/_build/html

# ------------------------------
# 6. （可选）构建矩阵（多版本/多依赖组合）
# ------------------------------
# 若需在 macOS 下测试多个 Python 版本或依赖版本，可配置矩阵
# build:
#   matrix:
#     python:
#       - "3.9"
#       - "3.10"
#       - "3.11"
